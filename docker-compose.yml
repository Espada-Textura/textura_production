version: "3.8"
services:
  apis:
    container_name: apis
    restart: always
    volumes:
      - ./apis/:/apis
    ports:
      - 5001:5001
    build: ./apis
    networks:
      - web_network
  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
      target: development
    container_name: frontend
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/app
    networks:
      - web_network
  # db:
  #   image: postgres
  #   container_name: db
  #   environment:
  #     POSTGRES_USER: texturaAdmin
  #     POSTGRES_PASSWORD: texturaPassword
  #     POSTGRES_MULTIPLE_DATABASES: textura
  #   networks:
  #     - db_network
  #   volumes:
  #     - ./database/postgres:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  nginx:
    container_name: nginx
    restart: always
    image: "nginx:latest"
    build:
      context: ./nginx
      dockerfile: ./Dockerfile
      target: development
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - web_network
    depends_on:
      - apis
      - frontend
networks:
  db_network:
    driver: bridge
  web_network:
    driver: bridge
