user  www-data;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
# include /etc/nginx/modules-enabled/*.conf;

events {
  worker_connections  1024;  # Increase if more clients
}

http {
  include       /etc/nginx/mime.types;
  # fallback in case we can't determine a type
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';

  proxy_buffer_size   128k;
  proxy_buffers   4 256k;
  proxy_busy_buffers_size   256k;
  
  client_max_body_size 1024M;

  access_log  /var/log/nginx/access.log  main;

  sendfile        on;
  #tcp_nopush     on;

  keepalive_timeout  65;

  # upstream api_upstream {
  #   server api:5000;
  # }

  upstream front_upstream {
    server front:3000;
  }

#   server {
  # use 'listen 80 deferred;' for Linux
  # use 'listen 80 accept_filter=httpready;' for FreeBSD
#   listen 80;
#   charset utf-8;

#   return 301 https://$host$request_uri;

#   }

  server {
    # use 'listen 443 deferred;' for Linux
    # use 'listen 443 accept_filter=httpready;' for FreeBSD
    listen 80;
    charset utf-8;

    server_name textura-art.com;

    # Set timeout 
    send_timeout 900s;
    proxy_read_timeout 900s;
    proxy_send_timeout 900s;
    proxy_connect_timeout 900s;

    # ssl
    # ssl_certificate           /etc/certs/textura-art.cert.pem;
    # ssl_certificate_key       /etc/certs/textura-art.key.pem;

    # ssl_session_cache  builtin:1000  shared:SSL:10m;
    # ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
    # ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
    # ssl_prefer_server_ciphers on;

    # Handle noisy favicon.ico messages in nginx
    location = /favicon.ico {
        return 204;
        access_log     off;
        log_not_found  off;
    }

    location / {
      try_files $uri @proxy_to_front;
    }

    # location /api/ {
    #   try_files $uri @proxy_to_api;
    # }

    # location @proxy_to_api {
    #     proxy_redirect     off;
    #     proxy_set_header   Host $host;
    #     proxy_set_header   X-Real-IP $remote_addr;
    #     proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header   X-Forwarded-Host $server_name;
    #     proxy_set_header   X-Forwarded-Proto $scheme;
    #     proxy_pass http://api_upstream;
    # }

    location @proxy_to_front {
        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_pass http://front_upstream;
    }
  }
}